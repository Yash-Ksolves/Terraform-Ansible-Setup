---
- name: Setting up master and worker nodes
  hosts: all
  become: true
  become_user: root
  vars_files:
  - env_variables 

  tasks: 

  - name: Disabling Swap on all nodes
    shell: swapoff -a

  - name: Commenting Swap entries in /etc/fstab
    shell: sed -e '/swap/s/^/#/g' -i /etc/fstab

  - name: Set SELinux to permissive mode
    shell: setenforce 0    

  - name: Update SELinux configuration
    shell: sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config    

  - name: Create kernel modules configuration file
    shell: echo -e "overlay\nbr_netfilter" > /etc/modules-load.d/k8s.conf

  - name: Load kernel modules
    shell: modprobe {{ item }}
    loop:
        - overlay
        - br_netfilter    

  - name: Create sysctl configuration file
    shell: echo -e "net.ipv4.ip_forward = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1" > /etc/sysctl.d/k8s.conf

  - name: Apply sysctl settings
    shell: sysctl --system    

  - name: Disable swap and update /etc/fstab
    shell: |
        swapoff -a &&
        sed -e '/swap/s/^/#/g' -i /etc/fstab    
        
  - name: Add Docker repository
    shell: dnf config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo    

  - name: Update package cache
    shell: dnf makecache    

  - name: Install containerd.io package
    shell: dnf install -y containerd.io

  - name: Create /etc/containerd directory
    shell: mkdir -p /etc/containerd    

  - name: Generate default containerd config
    shell: sh -c "containerd config default > /etc/containerd/config.toml"    

  - name: Update containerd config for systemd cgroup
    shell: sed -i 's/            SystemdCgroup = false/            SystemdCgroup = true/' /etc/containerd/config.toml

  - name: Enable and restart containerd service
    shell: |
        systemctl enable --now containerd.service &&
        systemctl restart containerd.service    

  - name: Enable and start containerd service
    systemd:
      name: containerd.service
      enabled: yes
      state: started

  - name: Creating a repository file for Kubernetes
    file:
     path: /etc/yum.repos.d/kubernetes.repo
     state: touch

  - name: Adding repository details in Kubernetes repo file.
    blockinfile:
     path: /etc/yum.repos.d/kubernetes.repo
     block: |
        [kubernetes]
        name=Kubernetes
        baseurl=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/
        enabled=1
        gpgcheck=1
        gpgkey=https://pkgs.k8s.io/core:/stable:/v1.28/rpm/repodata/repomd.xml.key
        exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni      

  - name: Install Kubernetes components
    shell: yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes    

  - name: Enable and start kubelet service
    shell: systemctl enable --now kubelet    

  - name: Starting and Enabling the required services
    service:
     name: "{{ item }}"
     state: started
     enabled: yes
    with_items: "{{ services }}"
    
